diff --git i/core/modules/image/image.module w/core/modules/image/image.module
index 1c00e03777..26226c9ef1 100644
--- i/core/modules/image/image.module
+++ w/core/modules/image/image.module
@@ -289,48 +289,55 @@ function image_style_options($include_empty = TRUE) {
 function template_preprocess_image_style(&$variables) {
   $style = ImageStyle::load($variables['style_name']);
 
-  // Determine the dimensions of the styled image.
-  $dimensions = [
-    'width' => $variables['width'],
-    'height' => $variables['height'],
-  ];
-
-  $style->transformDimensions($dimensions, $variables['uri']);
-
-  $variables['image'] = [
-    '#theme' => 'image',
-    '#width' => $dimensions['width'],
-    '#height' => $dimensions['height'],
-    '#attributes' => $variables['attributes'],
-    '#style_name' => $variables['style_name'],
-  ];
-
-  // If the current image toolkit supports this file type, prepare the URI for
-  // the derivative image. If not, just use the original image resized to the
-  // dimensions specified by the style.
-  if ($style->supportsUri($variables['uri'])) {
-    $variables['image']['#uri'] = $style->buildUrl($variables['uri']);
-  }
-  else {
-    $variables['image']['#uri'] = $variables['uri'];
-    // Don't render the image by default, but allow other preprocess functions
-    // to override that if they need to.
-    $variables['image']['#access'] = FALSE;
-
+    if (!$style) {
     // Inform the site builders why their image didn't work.
-    \Drupal::logger('image')->warning('Could not apply @style image style to @uri because the style does not support it.', [
-      '@style' => $style->label(),
-      '@uri' => $variables['uri'],
+    \Drupal::logger('image')->warning('Image style (@style) missing for @image. Please add the missing style under /admin/config/media/image-styles.', [
+      '@style' => $variables["style_name"],      
+      '@image' => $variables['uri'],
     ]);
-  }
+  } else {
+    // Determine the dimensions of the styled image.
+    $dimensions = [
+      'width' => $variables['width'],
+      'height' => $variables['height'],
+    ];
+
+    $style->transformDimensions($dimensions, $variables['uri']);
+
+    $variables['image'] = [
+      '#theme' => 'image',
+      '#width' => $dimensions['width'],
+      '#height' => $dimensions['height'],
+      '#attributes' => $variables['attributes'],
+      '#style_name' => $variables['style_name'],
+    ];
+
+    // If the current image toolkit supports this file type, prepare the URI for
+    // the derivative image. If not, just use the original image resized to the
+    // dimensions specified by the style.
+    if ($style->supportsUri($variables['uri'])) {
+      $variables['image']['#uri'] = $style->buildUrl($variables['uri']);
+    }
+    else {
+      $variables['image']['#uri'] = $variables['uri'];
+      // Don't render the image by default, but allow other preprocess functions
+      // to override that if they need to.
+      $variables['image']['#access'] = FALSE;
+
+      // Inform the site builders why their image didn't work.
+      \Drupal::logger('image')->warning('Could not apply @style image style to @uri because the style does not support it.', [
+        '@style' => $style->label(),
+        '@uri' => $variables['uri'],
+      ]);
+    }
 
-  if (isset($variables['alt']) || array_key_exists('alt', $variables)) {
-    $variables['image']['#alt'] = $variables['alt'];
-  }
-  if (isset($variables['title']) || array_key_exists('title', $variables)) {
-    $variables['image']['#title'] = $variables['title'];
+    if (isset($variables['alt']) || array_key_exists('alt', $variables)) {
+      $variables['image']['#alt'] = $variables['alt'];
+    }
+    if (isset($variables['title']) || array_key_exists('title', $variables)) {
+      $variables['image']['#title'] = $variables['title'];
+    }
   }
-
 }
 
 /**
